1.正则表达式的作用？
    匹配字符串


正则表达式（或RE）是一种小型的、高度装也的编程语言，它嵌套再python中，并通过re木块实现


元字符：
    .  通配符，除了换行符以外的任意一个字符。
    ^ 只匹配以第一个h开头的字符
    $ 从结尾开始匹配
    * 重复匹配[0,+∞]
    + 重复匹配[1,+∞] 至少有一个能匹配
    ? [0,1] 重复0次或者一次
    {} 自定义重复次数
    {1，}等价于{1，+∞}
    []字符集：取消元字符的特殊功能(\ ^ - 例外字符)
结论： *等于{0，正无穷}    + 等价于{1，+∞}   ?等价于{0，1} 推荐前者

反斜杠后边跟元字符去除特殊功能,比如\.
反斜杠后边跟普通字符实现特殊功能,比如\d

\d  匹配任何十进制数；它相当于类 [0-9]。
\D 匹配任何非数字字符；它相当于类 [^0-9]。
\s  匹配任何空白字符；它相当于类 [ \t\n\r\f\v]。
\S 匹配任何非空白字符；它相当于类 [^ \t\n\r\f\v]。
\w 匹配任何字母数字字符；它相当于类 [a-zA-Z0-9_]。
\W 匹配任何非字母数字字符；它相当于类 [^a-zA-Z0-9_]
\b  匹配一个特殊字符边界，比如空格 ，&，＃等

需要掌握正则表达式的方法：
    1.findall()： 所有的结果都返回到一个列表里
    2.search(): 返回匹配到的第一个对象(object)，对象可以调用grou()返回结果
    3.match(): 只在字符串开始匹配,返回匹配到的第一个对象(object)，对象可以调用grou()返回结果
    4.split():字符分割 *****
    5.sub 替换
    6.compile 把正则表达式编译成一个正则表达式对象