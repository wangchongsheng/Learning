1、Form是什么东西？
	用于验证用户请求数据合法性的一个组件
2、Django的Form的实现步骤：
	a. 创建一个验证用户请求的模板
		from django import forms
		class MyForm(forms.Form):
			user = forms.CharField(...)		# input type='text'
			email = forms.EmailField(...)	# input type='email'
			pwd = forms.PasswordField(...)	#input type='password'
			
		类：模板，验证几个
		字段： 用于验证用户某个字段
			obj = MyForm(request.POST)
			obj.is_valid()
		插件： user = from.CharField(...,widget=Input框)
		PS：类型转换
		
		---------
		class DetailForm(DForms.Form):
			user1 = fields.CharField()
			user2 = fields.CharField(widget=widgets.TextInput(attrs={'class':'c1','placeholder':'用户名'}))
			
			user3 = fields.ChoiceField(choices=[(1, 'SH'), (2, 'BJ'), ])
			user5 = fields.CharField(widget=widgets.Select(choices=[(1, 'SH'), (2, 'BJ'), ]))
			
			重要字段：
				CharField
				
				IntegerField
				
				IP,Email,URL,Slug
				
				ChoiceField(简写)  CharField+插件
				MultipleChoiceField
				
				RegexField
			参数：
                required=True,
                initial="小虎",
                validators=[RegexValidator(r'^[0-9]+$', '11111',code='f1'), RegexValidator(r'^159[0-9]+$', '2222',code='f2')],
                error_messages={'required': '不能为空','f1': 'geshicuowu','f2': 'kajdlfkjasldf','max_length': 'taichangla'},
                choices=[(),(),()]
			
			# 指定插件
                widget = 
                    TextInput(Input)
                    NumberInput(TextInput)
                    EmailInput(TextInput)
                    URLInput(TextInput)
                    PasswordInput(TextInput)
                    HiddenInput(TextInput)
                    Textarea(Widget)
                    DateInput(DateTimeBaseInput)
                    DateTimeInput(DateTimeBaseInput)
                    TimeInput(DateTimeBaseInput)
                    CheckboxInput
                    Select
                    NullBooleanSelect
                    SelectMultiple
                    RadioSelect
                    CheckboxSelectMultiple
                    FileInput
                    ClearableFileInput
                    MultipleHiddenInput
                    SplitDateTimeWidget
                    SplitHiddenDateTimeWidget
                    SelectDateWidget
                    
                    用法：
                        user1 = fields.CharField()
                        user2 = fields.CharField(widget=widgets.TextInput)
                        user3 = fields.CharField(widget=widgets.TextInput(attrs={}))
                        特殊的：
                            单值：
                            user4 = fields.CharField(widget=widgets.Select(attrs={},choices=[(),(),()]))
                            user4 = fields.ChoiceField(choices=[(),(),()],widget=widgets.Select)
                            
                            
                            
                            # 多值
                            user4 = fields.CharField(widget=widgets.MutipleSelect(attrs={},choices=[(),(),()]))
                            # "[1,2,3]"
                            user4 = fields.MultipleChoiceField(widget=widgets.MutipleSelect(attrs={},choices=[(),(),()]))
                            # [1,2,3,4]			
	
	b. 获取用户请求，进行验证
		- is_valid()
		- clean()
		- errors
	c. 
		Form提交：
			errors.字段.0
		Ajax提交：
			errors.as_json()
			errors.as_data()
			{'user':[Django对象(),]}
			
		
			